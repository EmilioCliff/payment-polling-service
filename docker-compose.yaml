version: '3.9'

services:

  gateway-service:
    container_name: gatewayApp
    build:
      context: ./gateway-service
      dockerfile: ./Dockerfile
    ports:
      - "8080:5000"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      payments-service:
        condition: service_healthy
      authentication-servie:
        condition: service_started

  payments-service:
    container_name: paymentApp
    build: 
      context: ./payments-service
      dockerfile: ./Dockerfile
    ports:
      - "3030:3030"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      paymentPostgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3030 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

  authentication-servie:
    container_name: authApp
    build: 
      context: ./authentication-service
      dockerfile: ./Dockerfile
    ports:
      - "8081:5000"
      - "8082:5050"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      authPostgres:
        condition: service_healthy
      payments-service:
        condition: service_healthy
    
  authPostgres:
    container_name: authPostgres
    image: postgres:alpine3.19
    environment:
      - POSTGRES_PASSWORD=auth-secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=authdb
      - PGUSER=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 80s

  paymentPostgres:
    container_name: paymentPostgres
    image: postgres:alpine3.19
    environment:
      - POSTGRES_PASSWORD=payment-secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=paymentdb
      - PGUSER=postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 80s

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: replicated
      replicas: 1
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    container_name: redis
    image: redis:7.2.4-alpine3.19
    ports:
      - "6379:6379"
    deploy:
      mode: replicated
      replicas: 1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
