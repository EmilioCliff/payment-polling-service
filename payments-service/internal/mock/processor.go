// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/EmilioCliff/payment-polling-app/payment-service/internal/workers (interfaces: TaskProcessor)
//
// Generated by this command:
//
//	mockgen -package mock -destination ./internal/mock/processor.go github.com/EmilioCliff/payment-polling-app/payment-service/internal/workers TaskProcessor
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	asynq "github.com/hibiken/asynq"
	gomock "go.uber.org/mock/gomock"
)

// MockTaskProcessor is a mock of TaskProcessor interface.
type MockTaskProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockTaskProcessorMockRecorder
}

// MockTaskProcessorMockRecorder is the mock recorder for MockTaskProcessor.
type MockTaskProcessorMockRecorder struct {
	mock *MockTaskProcessor
}

// NewMockTaskProcessor creates a new mock instance.
func NewMockTaskProcessor(ctrl *gomock.Controller) *MockTaskProcessor {
	mock := &MockTaskProcessor{ctrl: ctrl}
	mock.recorder = &MockTaskProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskProcessor) EXPECT() *MockTaskProcessorMockRecorder {
	return m.recorder
}

// ProcessPaymentRequestTask mocks base method.
func (m *MockTaskProcessor) ProcessPaymentRequestTask(arg0 context.Context, arg1 *asynq.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessPaymentRequestTask", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessPaymentRequestTask indicates an expected call of ProcessPaymentRequestTask.
func (mr *MockTaskProcessorMockRecorder) ProcessPaymentRequestTask(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessPaymentRequestTask", reflect.TypeOf((*MockTaskProcessor)(nil).ProcessPaymentRequestTask), arg0, arg1)
}

// ProcessWithdrawalRequestTask mocks base method.
func (m *MockTaskProcessor) ProcessWithdrawalRequestTask(arg0 context.Context, arg1 *asynq.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessWithdrawalRequestTask", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessWithdrawalRequestTask indicates an expected call of ProcessWithdrawalRequestTask.
func (mr *MockTaskProcessorMockRecorder) ProcessWithdrawalRequestTask(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessWithdrawalRequestTask", reflect.TypeOf((*MockTaskProcessor)(nil).ProcessWithdrawalRequestTask), arg0, arg1)
}

// Start mocks base method.
func (m *MockTaskProcessor) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start.
func (mr *MockTaskProcessorMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockTaskProcessor)(nil).Start))
}
